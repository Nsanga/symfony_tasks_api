security:
    # Define password hashing algorithm for User entity
    password_hashers:
        App\Entity\User:
            algorithm: bcrypt

    # Configure the user provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # Configure different firewalls for various routes and actions
    firewalls:
        # Development firewall, allowing access to Symfony profiler and dev tools
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall for user registration without JWT
        register:
            pattern: ^/api/register
            stateless: true
            security: false

        # Firewall for user login with JWT
        login:
            pattern: ^/api/login
            stateless: true
            security: false
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Firewall for other API actions protected by JWT
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        # Main firewall (fallback), lazy loading and using app_user_provider
        main:
            lazy: true
            provider: app_user_provider
            security: false

    # Define access control rules
    access_control:
        # Allow anonymous access to user registration
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # Allow anonymous access to user login
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # Require JWT authentication for other API routes
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        # Additional access control rules can be added here for specific paths and roles
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

# Configuration for testing environment
when@test:
    security:
        # Adjust password hashing parameters for testing environment
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
